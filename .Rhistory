geom_line(aes(group = feature)) +
theme_light() +
theme(aspect.ratio = 0.5,
legend.position = "bottom",
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_x_discrete(labels = month_labs) +
labs(title = "Number of missing values",
subtitle = "Over time for the main vaccination features",
caption = "December 2020 until December 2021",
color = "Features",
x = "Month",
y = "Number of missing values")
na_values_by_countries <- cov %>%
select(iso_code, location, people_vaccinated, essential_service_coverage, continent) %>%
replace_na(list(people_vaccinated = -1)) %>%
filter(people_vaccinated == -1) %>%
group_by(iso_code, location, essential_service_coverage, continent) %>%
summarise(number_of_na = n()) %>%
mutate(reported_days = as.integer((396-number_of_na)*100/396)) %>%
select(-number_of_na) %>%
as.data.frame()
geo %>%
inner_join(na_values_by_countries, by = "iso_code") %>%
ggplot(aes(geometry = geometry)) +
geom_sf(aes(fill = reported_days), color = "white", size = 0.1) +
labs(title = "Data Situation for the number of vaccinated people around the world",
subtitle = "Percentage of days with a reported number",
caption = "December 2020 to December 2021",
fill = "Reported days") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_fill_gradient2(low = "gray75", mid = "darkolivegreen2", high = "darkolivegreen", midpoint = 50,
limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0 %", "50 %", "100 %"))
na_values_by_countries_2 <- na_values_by_countries %>%
arrange(desc(reported_days), location) %>%
add_row(location = "...", reported_days = NA, .before = 16) %>%
filter(row_number() < 17 | row_number() > 170) %>%
mutate(col=ifelse(reported_days>50, "greater", "less"))
na_values_by_countries_2$location <- factor(na_values_by_countries_2$location, levels = na_values_by_countries_2$location)
na_values_by_countries_2 %>%
ggplot(aes(x=location, y=reported_days, fill=col, color=col)) +
geom_col() +
theme_light() +
scale_y_continuous(limits=c(0, 100)) +
theme(axis.text.x = element_text(angle = 90), legend.position = "none") +
geom_text(aes(label = reported_days), vjust = -0.5, size = 2.5) +
scale_fill_manual(values = c("darkolivegreen2", "gray80")) +
scale_color_manual(values = c("green4", "gray50")) +
labs(title = "Data Situation for the number of vaccinated people around the world",
subtitle = "Percentage of days with a reported number",
caption = "December 2020 to December 2021",
x = "Countries",
y = "Percentage of missing days"
) +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
na_values_by_countries %>%
ggplot(aes(x=essential_service_coverage, y=reported_days, color = continent, size = continent)) +
geom_point() +
theme_light() +
labs(title = "Reported Days by Quality of Healthcare systems for different continents",
color = "Continent",
caption = "December 2020 to December 2021",
x = "Healthcare System Coverage Index",
y = "Percentage of missing days") +
scale_color_manual(values = c("goldenrod1", "grey65", "steelblue3", "grey65", "grey65", "grey65")) +
scale_size_manual(values = c(1.7, 1.5, 1.7, 1.5, 1.5, 1.5)) +
guides(size = "none")
write.csv(cov, "cov.csv", row.names = FALSE)
cov_less_na <- read_csv("cov-less-na.csv")
rows <- nrow(cov)
missing_values <- cov %>%
gather(key = "key", value = "val") %>%
mutate(is_missing = is.na(val)) %>%
group_by(key, is_missing) %>%
summarise(num_missing = n()) %>%
filter(is_missing==T) %>%
select(-is_missing) %>%
arrange(desc(num_missing)) %>%
mutate(percent_missing = round(num_missing / rows * 100, digits = 2))
missing_values$key <- factor(missing_values$key, levels = missing_values$key)
missing_values %>%
ggplot(aes(x=key, y=percent_missing, fill = percent_missing)) +
geom_col(width = 0.6) +
geom_text(aes(label = percent_missing), hjust = -0.5) +
coord_flip() +
scale_fill_gradient2(low="#c8ff00", mid = "#ffc300", high = "#ff6500", midpoint = 50) +
scale_y_continuous(limits = c(0, 100)) +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
aspect.ratio = 1) +
labs(title = "Missing Values in the original COVID dataset",
y = "Percentage of missing values",
x = "Feature"
) +
guides(fill = "none")
rows <- nrow(cov)
missing_values_edited <- cov_less_na %>%
gather(key = "key", value = "val") %>%
mutate(is_missing = is.na(val)) %>%
group_by(key, is_missing) %>%
summarise(num_missing = n()) %>%
filter(is_missing==T) %>%
select(-is_missing) %>%
arrange(desc(num_missing)) %>%
mutate(percent_missing = round(num_missing / rows * 100, digits = 2))
missing_values_edited$key <- factor(missing_values_edited$key, levels = missing_values_edited$key)
missing_values_edited %>%
ggplot(aes(x=key, y=percent_missing, fill = percent_missing)) +
geom_col(width = 0.6) +
geom_text(aes(label = percent_missing), hjust = -0.5) +
coord_flip() +
scale_fill_gradient2(low="#c8ff00", mid = "#ffc300", high = "#ff6500", midpoint = 50) +
scale_y_continuous(limits = c(0, 100)) +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
aspect.ratio = 1) +
labs(title = "Missing Values in the edited COVID dataset",
y = "Percentage of missing values",
x = "Feature"
) +
guides(fill = "none")
cov_lna_newest <- cov_less_na %>%
filter(date == "2021-12-31") %>%
arrange(people_fully_vaccinated_per_hundred)
cov_lna_newest$location <- factor(cov_lna_newest$location, levels = cov_lna_newest$location)
cov_newest <- cov %>%
filter(date == "2021-12-31") %>%
arrange(people_fully_vaccinated_per_hundred)
cov_newest$location <- factor(cov_newest$location, levels = cov_newest$location)
cov_lna_newest %>%
ggplot(aes(x=location, y=people_fully_vaccinated_per_hundred)) +
geom_col(aes(fill = "#d2ffa7")) +
geom_col(data=cov_newest, aes(fill = "#5cbd00")) +
theme_light() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size =.1, color = "lightgrey"),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_y_continuous(limits = c(0, 100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)) +
scale_fill_identity(name = 'Data available',
guide = 'legend',
labels = c("before filling NAs", "after filling NAs")) +
labs(title = "Data available before and after filling NA values",
subtitle = "For people fully vaccinated per hundred",
x = "One bar represents one country",
y = "People fully vaccinated per hundred",
caption = "Date: December 31, 2021")
cov_less_na_newest <- cov_less_na %>%
filter(date == "2021-12-31")
geo %>%
inner_join(cov_less_na_newest, by = "iso_code") %>%
ggplot(aes(geometry = geometry)) +
geom_sf(aes(fill = people_fully_vaccinated_per_hundred), color = "white", size = 0.1) +
labs(title = "Fully vaccinated people around the world",
subtitle = "Per hundred",
caption = "Date: December 31, 2021",
fill = "Percentage") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_fill_gradient2(low = "#edf8b1", mid = "#7fcdbb", high = "#2c7fb8", midpoint = 50,
limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0 %", "50 %", "100 %"))
cov_less_na %>%
group_by(continent, date) %>%
summarize(people_fully_vaccinated = sum(people_fully_vaccinated, na.rm = T),
population = sum(population)) %>%
mutate(people_fully_vaccinated_percent = (people_fully_vaccinated / population)*100) %>%
ggplot(aes(x=date, y=people_fully_vaccinated_percent, color = continent)) +
scale_y_continuous(limits = c(0, 100), breaks = c(0, 25, 50, 75, 85, 100)) +
geom_hline(yintercept = 85, linetype="dashed", color = "#dd0000") +
geom_line(size = 0.6) +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.background = element_rect(fill = "#fbfbfb")) +
labs(title = "Fully vaccinated people",
subtitle = "by continents",
color = "Continent") +
xlab("Date") +
ylab("People fully vaccinated per hundred") +
scale_colour_manual(values = c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffdc29"))
# Color scale by "ColorBrewer" - link: https://bl.ocks.org/emeeks/8cdec64ed6daf955830fa723252a4ab3
# Validated if suitable for Color Blindness with "Viz Palette" - link: https://projects.susielu.com/viz-palette
of_interest <- c("Italy", "Malawi", "Ethiopia", "Sweden", "Israel", "South Korea", "United Arab Emirates", "China")
once_plot <- cov_less_na %>%
ggplot(aes(x=date, y=people_vaccinated_per_hundred, group = location)) +
geom_line(color = "gray85", alpha = 0.7, size = 0.5) +
labs(title = "People fully vaccinated") +
theme_light()
once_plot +
geom_line(
data = function(d) {filter(d, location %in% of_interest)},
size = 1.5,
colour = "white"
) +
geom_line(
data = function(d) {filter(d, location %in% of_interest)},
aes(color = location),
size = 0.75
) +
scale_y_continuous(limits = c(0, 100)) +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(title = "Share of people that were vaccinated\n at least once",
subtitle = "Around the world",
color = "Selected countries",
y = "People vaccinated per hundred",
x = "Date") +
scale_color_manual(values =
c("#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00"))
fully_plot <- cov_less_na %>%
ggplot(aes(x=date, y=people_fully_vaccinated_per_hundred, group = location)) +
geom_line(color = "gray85", alpha = 0.7, size = 0.5) +
theme_light()
fully_plot +
geom_line(
data = function(d) {filter(d, location %in% of_interest)},
size = 1.5,
colour = "white"
) +
geom_line(
data = function(d) {filter(d, location %in% of_interest)},
aes(color = location),
size = 0.75
) +
geom_hline(yintercept = 85, linetype="dashed", color = "#dd0000") +
scale_y_continuous(limits = c(0, 100), breaks = c(0, 25, 50, 75, 85, 100)) +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(title = "Share of fully vaccinated people",
subtitle = "Around the world",
color = "Selected countries",
y = "People fully vaccinated per hundred",
x = "Date") +
scale_color_manual(values =
c("#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00"))
# Color scale by "ColorBrewer" - link: https://bl.ocks.org/emeeks/8cdec64ed6daf955830fa723252a4ab3
# Validated if suitable for Color Blindness with "Viz Palette" - link: https://projects.susielu.com/viz-palette
geo %>%
inner_join(cov_less_na_newest, by = "iso_code") %>%
ggplot(aes(geometry = geometry)) +
geom_sf(aes(fill = total_boosters_per_hundred), color = "white", size = 0.1) +
labs(title = "Boostered people around the world",
subtitle = "Per hundred",
fill = "Percentage",
caption = "Date: December 31, 2021") +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_fill_gradient2(low = "#edf8b1", mid = "#7fcdbb", high = "#2c7fb8",
na.value = "lightgrey",
midpoint = 50,
limits = c(0, 100),
breaks = c(0, 50, 100),
labels = c("0 %", "50 %", "100 %"))
of_interest <- c("Chile", "Iceland", "United Kingdom", "Italy", "Bulgaria", "Israel")
fully_plot <- cov_less_na %>%
ggplot(aes(x=date, y=total_boosters_per_hundred, group = location)) +
geom_line(color = "gray85", alpha = 0.7, size = 0.5) +
theme_light()
fully_plot +
geom_line(
data = function(d) {filter(d, location %in% of_interest)},
size = 1.5,
colour = "white"
) +
geom_line(
data = function(d) {filter(d, location %in% of_interest)},
aes(color = location),
size = 0.75
) +
scale_y_continuous(limits = c(0, 100), breaks = c(0, 25, 50, 75, 85, 100)) +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(title = "Booster vaccinations around the world",
color = "Selected countries",
y = "People with a booster shot per hundred",
x = "Date") +
scale_color_manual(values = c("#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c"))
# Color scale by "ColorBrewer" - link: https://bl.ocks.org/emeeks/8cdec64ed6daf955830fa723252a4ab3
# Validated if suitable for Color Blindness with "Viz Palette" - link: https://projects.susielu.com/viz-palette
top_5_boosters <- cov_less_na %>%
filter(date == "2021-12-31") %>%
select(location, total_boosters_per_hundred) %>%
arrange(desc(total_boosters_per_hundred)) %>%
top_n(5) %>%
rename("Country" = location, "Total boosters per hundred" = total_boosters_per_hundred)
knitr::kable(top_5_boosters, caption = "Top 5 countries by booster vaccinations per hundred")
cov %>%
filter(date == "2021-12-31") %>%
group_by(location) %>%
summarize(people_fully_vaccinated_per_hundred =
mean(people_fully_vaccinated_per_hundred, na.rm = T),
gdp_per_capita = mean(gdp_per_capita)) %>%
arrange(gdp_per_capita) %>%
filter(!(is.na(gdp_per_capita))) %>%
mutate(quantile = ntile(gdp_per_capita, 4)) %>%
group_by(quantile) %>%
summarise(avg_vac = mean(people_fully_vaccinated_per_hundred, na.rm = T)) %>%
ggplot(aes(x=quantile, y = avg_vac)) +
geom_col(stat="identity", fill = "#2eafff", width = 0.5) +
theme_light() +
theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(size =.1, color = "lightgrey")) +
labs(title = "Share of population that is fully vaccinated",
subtitle = "By country income level",
x = "Income",
y = "Share of population",
caption = "Date: December 31, 2021") +
scale_x_continuous(breaks = c(1,2,3,4),
labels = c("Low", "Lower middle", "Higher middle", "High")) +
scale_y_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70))
cov_less_na %>%
filter(date == "2021-12-31") %>%
ggplot() +
geom_smooth(aes(x= gdp_per_capita,
y= people_fully_vaccinated_per_hundred),
color = "grey75",
fill = "grey93") +
geom_point(aes(x = gdp_per_capita,
y = people_fully_vaccinated_per_hundred,
color = continent,
size = continent)) +
scale_x_log10(breaks = c(1000, 10000, 100000),
labels = c("Low income \n 1000 $ / capita \n",
"Medium income \n 10 000 $ / capita \n",
"High income \n 100 000 $ / capita \n")) +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
text = element_text(family = "serif")) +
labs(title = "Fully vaccinated people by country income level",
x = "GDP per capita",
y = "People fully vaccinated per hundred",
caption = "GDP per capita = Gross Domestic Product per capita in constant 2011 international dollars\nDate: December 31, 2021",
color = "Continents") +
scale_color_manual(values = c("goldenrod1", "grey75", "steelblue3", "grey75", "grey75", "grey75")) +
scale_size_manual(values = c(1.7, 1.5, 1.7, 1.5, 1.5, 1.5)) +
guides(size = "none")
cov_less_na %>%
filter(date == "2021-12-31") %>%
arrange(gdp_per_capita) %>%
filter(!(is.na(gdp_per_capita))) %>%
mutate(quantile = ntile(gdp_per_capita, 4)) %>%
group_by(quantile) %>%
summarise(
people_vaccinated = sum(people_vaccinated, na.rm = T),
people_fully_vaccinated = sum(people_fully_vaccinated, na.rm = T),
total_boosters = sum(total_boosters, na.rm = T),
population = sum(population, na.rm = T)) %>%
transmute(
boostered_people = total_boosters,
doubly_vaccinated_people = people_fully_vaccinated - total_boosters,
once_vaccinated_people = people_vaccinated - people_fully_vaccinated,
unvaccinated_people = population - boostered_people - doubly_vaccinated_people
- once_vaccinated_people,
population = population,
quantile = quantile) %>%
pivot_longer(cols = boostered_people:unvaccinated_people,
names_to = "vaccination_status",
values_to = "People") %>%
ggplot(aes(x=quantile, y=People, fill = forcats::fct_rev(vaccination_status))) +
geom_col(stat="identity", width = 0.5, position = "fill") +
theme_light() +
theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(1,2,3,4),
labels = c("Low", "Lower middle", "Higher middle", "High")) +
scale_y_continuous(breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
labels = c(0, 20, 40, 60, 80, 100)) +
labs(title = "Inequality in vaccine coverage",
subtitle = "by country income level",
x = "Income",
y = "Share of population",
fill = "Vaccination Status",
caption = "Date: December 31, 2021") +
scale_fill_manual(values=c("#aeaeae", "#a4dcff", "#2eafff", "#003d67"),
labels = c("Unvaccinated", "One Dose", "Two Doses", "Three Doses"))
sum_quantile <- cov_less_na %>%
arrange(gdp_per_capita) %>%
filter(!(is.na(gdp_per_capita))) %>%
mutate(quantile = ntile(gdp_per_capita, 4)) %>%
group_by(quantile, date) %>%
replace_na(list(people_vaccinated_per_hundred=0, people_fully_vaccinated_per_hundred = 0, total_boosters_per_hundred = 0)) %>%
summarise(
people_vaccinated_per_hundred = mean(people_vaccinated_per_hundred, na.rm = T),
people_fully_vaccinated_per_hundred = mean(people_fully_vaccinated_per_hundred, na.rm = T),
total_boosters_per_hundred = mean(total_boosters_per_hundred, na.rm = T)) %>%
arrange(quantile)
labels <- c("1" = "Low Income", "2" ="Lower middle Income", "3" = "Higher middle Income", "4" = "High Income")
sum_quantile %>%
ggplot() +
facet_wrap(vars(quantile), labeller = labeller(quantile = labels)) +
geom_area(aes(x=date, y=people_vaccinated_per_hundred, fill = "#a4dcff")) +
geom_area(aes(x=date, y=people_fully_vaccinated_per_hundred, fill = "#2eafff")) +
geom_area(aes(x=date, y=total_boosters_per_hundred, fill = "#003d67")) +
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
strip.background =element_rect(fill="white"),
strip.text = element_text(colour = 'black')) +
labs(title = "Vaccination Progress",
subtitle = "Income Inequality",
x = "Date",
y = "Vaccinations per hundred") +
scale_fill_identity(name = 'Vaccination Status',
guide = 'legend',
labels = c("Three doses", "Two doses", "One Dose"))
quantiles_health <- cov_less_na %>%
filter(date == "2021-12-31") %>%
arrange(essential_service_coverage) %>%
filter(!(is.na(essential_service_coverage))) %>%
mutate(quantile = ntile(essential_service_coverage, 4)) %>%
group_by(quantile) %>%
summarise(
people_vaccinated = sum(people_vaccinated, na.rm = T),
people_fully_vaccinated = sum(people_fully_vaccinated, na.rm = T),
total_boosters = sum(total_boosters, na.rm = T),
population = sum(population, na.rm = T)) %>%
transmute(
boostered_people = total_boosters,
doubly_vaccinated_people = people_fully_vaccinated - total_boosters,
once_vaccinated_people = people_vaccinated - people_fully_vaccinated,
unvaccinated_people = population - boostered_people - doubly_vaccinated_people
- once_vaccinated_people,
population = population,
quantile = quantile) %>%
pivot_longer(cols = boostered_people:unvaccinated_people,
names_to = "vaccination_status",
values_to = "People")
quantiles_health %>%
ggplot(aes(x=quantile, y=People, fill = forcats::fct_rev(vaccination_status))) +
geom_col(stat="identity", width = 0.5, position = "fill") +
theme_light() +
theme(aspect.ratio = 1,
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(1,2,3,4),
labels = c("Low", "Lower middle", "Higher middle", "High")) +
scale_y_continuous(breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1.0),
labels = c(0, 20, 40, 60, 80, 100)) +
labs(title = "Inequality in vaccine coverage",
subtitle = "by Quality of Healthcare",
x = "Health Coverage Index (WHO)",
y = "Share of population",
fill = "Vaccination Status",
caption = "Date: December 31, 2021") +
scale_fill_manual(values=c("#fff09c", "#ffd833", "#ffbf00", "#e47900"),
labels = c("Unvaccinated", "One Dose", "Two Doses", "Three Doses"))
table_health <- quantiles_health %>%
mutate(share = round(People / population * 100, digits = 2)) %>%
select(quantile, vaccination_status, share) %>%
rename("Quantile" = quantile,
"Vaccination Status" = vaccination_status,
"Share" = share)
knitr::kable(table_health, caption = "Share of Population that is vaccined by Quantiles of the Health Service Index")
# Download the "WeePeople" font and install it by double clicking on the ttf file
# Link: https://github.com/propublica/weepeople/blob/master/weepeople.ttf
# Change the user name to your user name on your PC
user_name <- "Janas Laptop"
font_add("weepeople", regular = paste("C:\\Users\\", user_name,  "\\AppData\\Local\\Microsoft\\Windows\\Fonts\\WeePeople-Regular.ttf", sep=""))
showtext_auto()
letters <- "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
poorest <- tibble(
id = 1:100,
color = c(rep("#ffee9f", 82), rep("#ffc421", 7), rep("#ff9621", 11))) %>%
rowwise() %>%
mutate(l_idx = (id %% str_length(letters)) + 1,
l = substr(letters, l_idx, l_idx),
y = ((id - 1)%/% 20) - runif(1, 0, 0.2),
x = (id %% 20) -  runif(1, 0, 1.0)) %>%
ggplot(aes(x = x, y = y, label = l, color = color)) +
geom_text(family="weepeople", size=13) +
scale_color_identity() +
theme_void() +
labs(title = "Vaccination Status in Countries with a very bad Healthcare System") +
theme(aspect.ratio = 0.3,
plot.title = element_text(hjust = 0.5, size = 15)) +
scale_y_continuous(limits=c(-1, 6))
richest <- tibble(
id = 1:100,
color = c(rep("#ffee9f", 20), rep("#ffc421", 5), rep("#ff9621", 61), rep("#b03b00", 14))) %>%
rowwise() %>%
mutate(l_idx = (id %% str_length(letters)) + 1,
l = substr(letters, l_idx, l_idx),
y = ((id - 1)%/% 20) - runif(1, 0, 0.2),
x = (id %% 20) -  runif(1, 0, 1.0)
) %>%
ggplot(aes(x = x, y = y, label = l, color = color)) +
geom_text(family="weepeople", size=13) +
scale_color_identity() +
theme_void() +
labs(title = "Vaccination Status in Countries with a very good Healthcare System",
caption = "Date: December 31, 2021") +
theme(aspect.ratio = 0.3,
plot.title = element_text(hjust = 0.5, size = 15)) +
scale_y_continuous(limits=c(-1, 6))
wrap_plots(poorest, richest, nrow = 2)
